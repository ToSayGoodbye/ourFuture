<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
   	xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop  
						http://www.springframework.org/schema/aop/spring-aop.xsd  
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">  
   
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.propertis" />  
    </bean>  
  
   <!-- 配置：扫描service包下所有使用注解的类型（只要扫描就行，其他都交给注解） -->
    <context:component-scan base-package="com.wjc"/>
    
  	<!-- 数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />  
    </bean>  
    
    <!-- 数据源代理 -->  
	<bean id="defaultDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">     
	    <constructor-arg>  
	        <ref bean="dataSource" />  
	    </constructor-arg>     
	</bean>
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/wjc/mapping/*.xml"></property>  
    </bean>  
  
     <!-- <bean id="userDao" class="com.wjc.dao.UserDaoImpl">  
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean> --> 
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.wjc.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
    
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="defaultDataSource" />  
    </bean>  
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"   
                       rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>  
            <tx:method name="add*" propagation="REQUIRED" read-only="false"   
                       rollback-for="java.lang.Exception" />  
            <tx:method name="update*" propagation="REQUIRED" read-only="false"   
                       rollback-for="java.lang.Exception" />  
              
            <tx:method name="find*" propagation="SUPPORTS"/>  
            <tx:method name="get*" propagation="SUPPORTS"/>  
            <tx:method name="select*" propagation="SUPPORTS"/>  
            
        </tx:attributes>  
    </tx:advice>  
      
    <aop:config>  
        <aop:pointcut id="pc" expression="execution(* com.wjc.service.IUserService.*.*(..))" />  
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />  
    </aop:config>  
    
</beans>  